apiVersion: apps/v1
kind: Deployment
metadata: { name: mlflow, namespace: mlops-train }
spec:
  replicas: 1
  selector: { matchLabels: { app: mlflow } }
  template:
    metadata: { labels: { app: mlflow } }
    spec:
      containers:
      - name: mlflow
        image: ghcr.io/mlflow/mlflow:v2.14.1
        command: ["/bin/sh","-lc"]
        args:
          - |
            pip install --no-cache-dir "psycopg2-binary>=2.9,<3" boto3 && \
            exec mlflow server \
              --host=0.0.0.0 \
              --port=5000 \
              --backend-store-uri=postgresql+psycopg2://mlflow:mlflowpass@postgres.mlops-train.svc.cluster.local:5432/mlflow \
              --default-artifact-root=s3://mlflow-artifacts/
        env:
          - { name: MLFLOW_S3_ENDPOINT_URL, value: "http://minio.mlops-train.svc.cluster.local:9000" }
          - { name: AWS_ACCESS_KEY_ID,     valueFrom: { secretKeyRef: { name: minio-secret, key: MINIO_ROOT_USER } } }
          - { name: AWS_SECRET_ACCESS_KEY, valueFrom: { secretKeyRef: { name: minio-secret, key: MINIO_ROOT_PASSWORD } } }
          - { name: AWS_DEFAULT_REGION, value: "us-east-1" }
          - { name: AWS_S3_SIGNATURE_VERSION, value: "s3v4" }
          - { name: AWS_S3_FORCE_PATH_STYLE, value: "true" }
        ports: [{ containerPort: 5000, name: http }]
        readinessProbe:
          httpGet: { path: "/", port: 5000 }
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests: { cpu: "200m", memory: "256Mi" }
          limits:   { cpu: "1",    memory: "1Gi" }