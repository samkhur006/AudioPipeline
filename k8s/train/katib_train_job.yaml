apiVersion: kubeflow.org/v1beta1
kind: Experiment
metadata:
  name: yamnet-hpo
  namespace: mlops-train
  annotations:
    katib.kubeflow.org/skip-image-validation: "true"
    sidecar.istio.io/inject: "false"
spec:
  maxTrialCount: 12
  parallelTrialCount: 2
  maxFailedTrialCount: 3
  objective:
    type: maximize
    objectiveMetricName: final_val_accuracy     # must match your stdout key
    additionalMetricNames:
      - final_val_loss
      - final_val_f1
    goal: 0.90
  algorithm:
    algorithmName: random
  parameters:
    - name: LEARNING_RATE
      parameterType: double
      feasibleSpace: { min: "1e-5", max: "1e-3" }
    - name: BATCH_SIZE
      parameterType: categorical
      feasibleSpace: { list: ["8","2","4"] }
  metricsCollectorSpec:
    collector:
      kind: StdOut   # default; looks for key=value in stdout
    # (Optional) explicit regex if you want:
    # filter:
    #   metricsFormat: ["([\\w|-]+)=(\\-?\\d*\\.?\\d+)"]
  trialTemplate:
    primaryContainerName: yamnet-train
    trialParameters:
      - name: lr
        reference: LEARNING_RATE
      - name: bs
        reference: BATCH_SIZE
    trialSpec:
      apiVersion: batch/v1
      kind: Job
      metadata:
        labels:
          kueue.x-k8s.io/queue-name: lq-train   # <- send to your LocalQueue
        annotations:
          katib.kubeflow.org/skip-image-validation: "true"
      spec:
        suspend: true                            # <- let Kueue admit it
        backoffLimit: 3
        template:
          metadata:
            labels:
              kueue.x-k8s.io/queue-name: lq-train
            annotations:
              katib.kubeflow.org/skip-image-validation: "true"
              katib.kubeflow.org/skip-mutating-webhook: "true"
          spec:
            restartPolicy: Never
            priorityClassName: train-normal
            containers:
            - name: yamnet-train
              image: python:3.11-slim
              imagePullPolicy: IfNotPresent
              command: ["/bin/bash"]
              args: 
                - -c
                - |
                  set -e
                  echo "🔍 Debugging paths..."
                  ls -la /data/
                  ls -la /data/real_audio_dataset/ || echo "real_audio_dataset not found"
                  ls -la /app/
                  apt-get update
                  apt-get install -y git build-essential libsndfile1
                  pip install --no-cache-dir mlflow==2.14.1 tensorflow==2.15.0 tensorflow_hub==0.16.1 numpy==1.26.4 pandas==2.2.2 scikit-learn==1.5.1 librosa==0.10.2.post1 soundfile==0.12.1 boto3==1.34.162 matplotlib==3.8.4
                  python /app/yamnet_train.py
              env:
                - name: MLFLOW_TRACKING_URI
                  value: "http://mlflow:5000"
                - name: AWS_ENDPOINT_URL
                  value: "http://minio:9000"
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: s3-minio-cred
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: s3-minio-cred
                      key: AWS_SECRET_ACCESS_KEY
                - name: EXP_NAME
                  value: "yamnet-training"
                - name: EPOCHS
                  value: "15"
                - name: CLASS_FILTER
                  value: "dog"
                - name: SAVE_MODEL
                  value: "true"
                - name: DATA_BASE_DIR
                  value: "/data"
                - name: DEBUG_PATHS
                  value: "true"
                - name: MANIFEST_JSON
                  value: "/data/real_audio_dataset/metadata.json"
                - name: DATA_HASH
                  value: "training-dataset-v1"
                - name: GIT_SHA
                  value: "main"
                - name: IMAGE_DIGEST
                  value: "yamnet-train:dev"

                # Hyperparams come from Katib:
                - name: LEARNING_RATE
                  value: "${trialParameters.lr}"
                - name: BATCH_SIZE
                  value: "${trialParameters.bs}"

              resources:
                requests:
                  cpu: "1000m"
                  memory: "2Gi"
                limits:
                  cpu: "2000m"
                  memory: "4Gi"
              volumeMounts:
                - name: dataset
                  mountPath: /data
                  readOnly: true
                - name: training-script
                  mountPath: /app
                  readOnly: true
            volumes:
              - name: dataset
                hostPath:
                  path: /mnt/data
                  type: Directory
              - name: training-script
                configMap:
                  name: yamnet-training-script
